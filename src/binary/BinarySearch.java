package binary;

import java.awt.Toolkit;

/**~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 *  Class:         Binary Search
 *  File:          BinarySearch.java
 *  Description:   Demonstrates the binary search algorithm. 
 *  @author:       
 *  Environment:   PC, Windows 8, jdk1.8.0, NetBeans 8.0 
 *  Date:          4/21/2014
 *~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~*/

public class BinarySearch extends javax.swing.JFrame
{

    /**
     * Creates new form BinarySearch
     */
    public BinarySearch()
    {
        initComponents();
         // set calculateJButton as default
        this.getRootPane().setDefaultButton(searchJButton);

        // set icon for form
        this.setIconImage(Toolkit.getDefaultToolkit().getImage("src/binary/SmallHeap.png"));
        
        // centers the form at start
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        titleJjLabel = new javax.swing.JLabel();
        keyJLabel = new javax.swing.JLabel();
        keyJTextField = new javax.swing.JTextField();
        resultJLabel = new javax.swing.JLabel();
        resultJTextField = new javax.swing.JTextField();
        searchJButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Example");
        setResizable(false);

        titleJjLabel.setFont(new java.awt.Font("Tempus Sans ITC", 2, 24)); // NOI18N
        titleJjLabel.setForeground(new java.awt.Color(51, 0, 102));
        titleJjLabel.setText("Binary Search ");

        keyJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        keyJLabel.setText("Enter key: ");

        keyJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        keyJTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        resultJLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        resultJLabel.setText("Result: ");

        resultJTextField.setEditable(false);
        resultJTextField.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        searchJButton.setBackground(new java.awt.Color(255, 255, 204));
        searchJButton.setFont(new java.awt.Font("Tahoma", 0, 16)); // NOI18N
        searchJButton.setMnemonic('S');
        searchJButton.setText("Search");
        searchJButton.setToolTipText("Find key");
        searchJButton.addActionListener(new java.awt.event.ActionListener()
        {
            public void actionPerformed(java.awt.event.ActionEvent evt)
            {
                searchJButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(keyJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(keyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(titleJjLabel))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(resultJLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchJButton)
                            .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleJjLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(keyJLabel)
                    .addComponent(keyJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(resultJLabel)
                    .addComponent(resultJTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(searchJButton)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchJButtonActionPerformed(java.awt.event.ActionEvent evt)//GEN-FIRST:event_searchJButtonActionPerformed
    {//GEN-HEADEREND:event_searchJButtonActionPerformed
        // Create an array and serach for specified key
        // create array and fill with even integers 0 to 28
        int[] a = new int[ 15 ];

        for ( int i = 0; i < a.length; i++ ) 
           a[ i ] = 2 * i;
        
        int searchKey = Integer.parseInt(keyJTextField.getText());
        // perform the binary search
        
        int element = binarySearch( a, searchKey );


        if ( element != -1 )
           resultJTextField.setText("Found at " + element );
        else
           resultJTextField.setText( "Value not found" );
    }//GEN-LAST:event_searchJButtonActionPerformed

    // Binary search
   public int binarySearch( int array[], int key ) 
   {
        int low = 0;                  // low subscript
        int high = array.length - 1;  // high subscript
        int middle;                   // middle subscript

        while ( low <= high ) 
        {
            middle = ( low + high ) / 2;          

            if ( key == array[ middle ] )  // match
               return middle;
            else if ( key < array[ middle ] )
               high = middle - 1;  // search low end of array
            else
               low = middle + 1;   // search high end of array
        }

        return -1;   // searchKey not found
   }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[])
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(BinarySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(BinarySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(BinarySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(BinarySearch.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable()
        {
            public void run()
            {
                new BinarySearch().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel keyJLabel;
    private javax.swing.JTextField keyJTextField;
    private javax.swing.JLabel resultJLabel;
    private javax.swing.JTextField resultJTextField;
    private javax.swing.JButton searchJButton;
    private javax.swing.JLabel titleJjLabel;
    // End of variables declaration//GEN-END:variables
}
